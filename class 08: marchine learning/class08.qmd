---
title: "class 08"
format: pdf
editor: visual
---
# Breast Cancer Project

```{r}
wisc.data <- read.csv("WisconsinCancer.csv", row.names = 1)
head(wisc.data)
```

>Q. How many patient samples are in this dataset?

```{r}
nrow(wisc.data)
```

There are `r nrow(wisc.data)` patients in this dataset.


>Q. How many cancer (M) and non cancer (B) samples are there?

```{r}
table(wisc.data$diagnosis)
```

Save the diagnosis for later use as a reference to compare how weel we do with PCA etc.

```{r}
diagnosis <- as.factor(wisc.data$diagnosis)
#diagnosis
```

Now exclude the diagnosis column from the data

```{r}
wisc <- wisc.data[,-1]
```

>Q How many "dimensions", "variables", "columns" are there in this dataset?

```{r}
ncol(wisc)
```

# Principal Component Analysis (PCA)

To perform PCA in R we can use the `prcomp()` function, it takes as input a numeric dataset and optional `scale=FALSE/TRUE` argument

We generally always want to `scale=TRUE` but let's make sure by checking if the mean and standard deviation values are different across 30 columns

```{r}
round( colMeans(wisc) )
```

```{r}
pca <- prcomp(wisc, scale=TRUE)
summary(pca)
```

```{r}
attributes(pca)
```

```{r}
plot(pca$x[,1], pca$x[,2], col=diagnosis)
```
```{r}
library(ggplot2)

x <- as.data.frame(pca$x)

ggplot(x) +
  aes(PC1, PC2, col=diagnosis) +
  geom_point()
```
>Q. How much variance is captured in the top 3 PCs?

They capture 72.6% of the total variance.

>Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.

```{r}
pca$rotation["concave.points_mean", 1]
```

```{r}
attributes(pca)
```
# Combine PCA results with clustering

We can use our new PCA variables (i.e. the scores along the PCs contained in t `pca$x`) as input for other methods such as clustering.

```{r}
# Hclust needs a distance matrix as input
d <- dist( pca$x[,1:3] )

hc <- hclust(d, method="ward.D2")
plot(hc)
```

To get our cluster membership vector we can use the `cutree()` function and specify a height: (`h`) or number of groups (`k`).

```{r}
grps <- cutree(hc, h=80)
table(grps)
```

I want to find out how many diagnosis "M" and "B" are in each group?

```{r}
table(diagnosis)
```

```{r}
table(diagnosis, grps)
```
We can also plot our results using our clustering vector `grps`

```{r}
plot(pca$x[,1], pca$x[,2], col=grps)
```

```{r}
library(ggplot2)

x <- as.data.frame(pca$x)

ggplot(x) +
  aes(PC1, PC2) +
  geom_point(col=grps)
```

>Q15. What is the specificity and sensitivity of our current results?

```{r}
#Sensitivity
179/(179+33)
```

```{r}
#Specificity
333/(333+24)
```


>Q16. Which of these new patients should we prioritize for follow up based on your results?

We should prioritize patient 2 because it is most similar to our previous results.



